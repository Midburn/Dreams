:javascript

  function verify_person_email(event) {
    const email_field = event.target;
    if (email_field.value != '') {
      verify_email(email_field.value, function (valid) {
        if (!valid) {
          email_field.classList.remove("email_valid");
          email_field.classList.add("email_invalid");
        } else {
          email_field.classList.remove("email_invalid");
          email_field.classList.add("email_valid");
        }
      });
    }
  }

  function verify_email(email, callback) {
    var request = new XMLHttpRequest();
    request.open("POST", '/verify_email', true);
    request.setRequestHeader('Content-Type', 'application/json');
    request.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
    request.onload  = function() {
      callback(JSON.parse(request.response)['verified']);
    };
    request.send(JSON.stringify({ "email": email }));
  }

- dream_admin ||= false

.nested-fields.panel.panel-default.col-md-7{ style: 'float:' + I18n.t('lang_direction')}
  .panel-body
    = f.label :roles
    = f.collection_check_boxes(:role_ids, Role.all, :id, :identifier) do |b|
      = b.label { b.check_box + ' ' + t("project_roles." + b.text) }
    %br
    = f.label :name
    - if (@can_edit)
      = f.text_field :name, class: 'form-control'
    - else
      = f.text_field :name, class: 'form-control', readonly: true
    = f.label :email
    - if (@can_edit)
      = f.text_field :email, class: 'form-control person_email', onfocusout: 'verify_person_email(event)'
    - else
      = f.text_field :email, class: 'form-control', readonly: true
    = f.label :phone_number
    - if (@can_edit)
      = f.text_field :phone_number, class: 'form-control'
    - else
      = f.text_field :phone_number, class: 'form-control', readonly: true
    = f.label :background
    - if (@can_edit)
      = f.text_field :background, class: 'form-control'
    - else
      = f.text_field :background, class: 'form-control', readonly: true
      -#Remove unneeded fields
    -#- if Rails.configuration.x.firestarter_settings["person_early_arrival"]
    -#  .early-arrival
    -#    = f.label :needs_early_arrival
    -#    = f.check_box :needs_early_arrival, class: "checkbox"
    -#    %br
    -#
    -#- if false Rails.configuration.x.firestarter_settings["person_has_ticket"]
    -#  .has-ticket
    -#    = f.label :has_ticket
    -#    = f.check_box :has_ticket, class: "checkbox"
    -#    %br
    -#    %br

    %br
    - if (@can_edit && !dream_admin)
      = link_to_remove_association t("remove_person"), f, class: 'remove_person fa fa-trash'
